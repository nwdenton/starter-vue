plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
    id 'java'
    id "org.sonarqube" version "2.7"
}

apply plugin: "io.spring.dependency-management"

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
//	maven {
//		url = "$System.env.NEXU_URL/repository/maven-public"
//		credentials {
//			username = "$System.env.NEXUS_USERNAME"
//			password = "$System.env.NEXUS_PASSWORD"
//		}
//	}
    mavenCentral()
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-web"){
		exclude group: "org.springframework.boot", module: "spring-boot-starter-json" // excluding jackson and using gson for security reasons (fails nexus IQ)
	}
	implementation "com.google.code.gson:gson:2.8.5"
	implementation "org.springframework.session:spring-session-jdbc"

	testImplementation "org.springframework.boot:spring-boot-starter-test"

	compile "junit:junit:4.12"
	compileOnly "org.projectlombok:lombok:1.18.8"
	runtimeOnly "mysql:mysql-connector-java"
	runtimeOnly "org.springframework.boot:spring-boot-devtools"
	annotationProcessor "org.projectlombok:lombok:1.18.8"
}


bootJar {
	dependsOn ':copyFrontEnd'
}

task copyFrontEnd(type: Copy){
	dependsOn ':buildFrontEnd'
	from "$projectDir/frontend/dist"
	into "src/main/resources/public"
}

task buildFrontEnd(type: Exec) {
	workingDir 'frontend'
	commandLine 'yarn', 'install'
	commandLine 'yarn', 'build'
}
